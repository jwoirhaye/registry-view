name: Release
on:
  push:
    branches: [ main ]  

jobs:
  create-tag:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag.outputs.new_tag }}
      new_version: ${{ steps.tag.outputs.new_version }}
      changelog: ${{ steps.tag.outputs.changelog }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Generate tag and changelog
        id: tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: major   
          tag_prefix: v         
          release_branches: main

  build-and-push:
    runs-on: ubuntu-latest
    needs: [create-tag]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata for frontend
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/registry-view-frontend
          tags: |
            type=raw,value=latest
            type=raw,value=${{ needs.create-tag.outputs.new_version }}
            type=sha,prefix=main-,format=short
          labels: |
            org.opencontainers.image.title=Registry View Frontend
            org.opencontainers.image.description=Frontend application for registry view
            org.opencontainers.image.version=${{ needs.create-tag.outputs.new_version }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
      
      - name: Extract metadata for proxy
        id: meta-proxy
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/registry-view-proxy
          tags: |
            type=raw,value=latest
            type=raw,value=${{ needs.create-tag.outputs.new_version }}
            type=sha,prefix=main-,format=short
          labels: |
            org.opencontainers.image.title=Registry View Proxy
            org.opencontainers.image.description=Proxy application for registry view
            org.opencontainers.image.version=${{ needs.create-tag.outputs.new_version }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
      
      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: deploy/docker/frontend/Dockerfile
          push: true
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and push proxy image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: deploy/docker/proxy/Dockerfile
          push: true
          tags: ${{ steps.meta-proxy.outputs.tags }}
          labels: ${{ steps.meta-proxy.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-release:
    runs-on: ubuntu-latest
    needs: [create-tag, build-and-push]
    steps:
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.create-tag.outputs.new_tag }}
          release_name: Release ${{ needs.create-tag.outputs.new_tag }}
          body: |
            ## üöÄ Release ${{ needs.create-tag.outputs.new_tag }}
            
            ### üì¶ Docker Images
            - **Frontend**: `ghcr.io/${{ github.repository }}/registry-view-frontend:${{ needs.create-tag.outputs.new_tag }}`
            - **Proxy**: `ghcr.io/${{ github.repository }}/registry-view-proxy:${{ needs.create-tag.outputs.new_tag }}`
            
            ### üê≥ Quick Start
            ```bash
            docker pull ghcr.io/${{ github.repository }}/registry-view-frontend:${{ needs.create-tag.outputs.new_tag }}
            docker pull ghcr.io/${{ github.repository }}/registry-view-proxy:${{ needs.create-tag.outputs.new_tag }}
            ```
            
            ### üìù Changes
            ${{ needs.create-tag.outputs.changelog }}
          draft: false
          prerelease: false